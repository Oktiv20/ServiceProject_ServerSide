// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServiceProject_ServerSide;

#nullable disable

namespace ServiceProject_ServerSide.Migrations
{
    [DbContext(typeof(ServiceProjectDbContext))]
    [Migration("20231024020944_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectUser", b =>
                {
                    b.Property<int>("ProjectsId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersId")
                        .HasColumnType("integer");

                    b.HasKey("ProjectsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ProjectUser");
                });

            modelBuilder.Entity("ServiceProject_ServerSide.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Category One"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Category Two"
                        });
                });

            modelBuilder.Entity("ServiceProject_ServerSide.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Date = "12/01/2023",
                            Description = "This is the first Project",
                            Duration = 3,
                            Image = "url.com",
                            Location = "Nashville",
                            Name = "Project One"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Date = "11/01/2023",
                            Description = "This is the second Project",
                            Duration = 3,
                            Image = "url.com",
                            Location = "Clarksville",
                            Name = "Project Two"
                        });
                });

            modelBuilder.Entity("ServiceProject_ServerSide.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfilePic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isStaff")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "User1@yahoo.com",
                            FirstName = "Maggie",
                            LastName = "Chafee",
                            PhoneNumber = "615-456-4544",
                            ProfilePic = "Url.com",
                            Uid = "4d56asd6",
                            isStaff = true
                        },
                        new
                        {
                            Id = 2,
                            Email = "User2@yahoo.com",
                            FirstName = "Kyle",
                            LastName = "Blunt",
                            PhoneNumber = "615-456-8956",
                            ProfilePic = "Url.com",
                            Uid = "4d56asd6",
                            isStaff = true
                        },
                        new
                        {
                            Id = 3,
                            Email = "User3@yahoo.com",
                            FirstName = "Joey",
                            LastName = "Ebach",
                            PhoneNumber = "615-658-1452",
                            ProfilePic = "Url.com",
                            Uid = "4d56asd6",
                            isStaff = true
                        });
                });

            modelBuilder.Entity("ProjectUser", b =>
                {
                    b.HasOne("ServiceProject_ServerSide.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceProject_ServerSide.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServiceProject_ServerSide.Models.Project", b =>
                {
                    b.HasOne("ServiceProject_ServerSide.Models.Category", "Category")
                        .WithMany("Projects")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ServiceProject_ServerSide.Models.Category", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
